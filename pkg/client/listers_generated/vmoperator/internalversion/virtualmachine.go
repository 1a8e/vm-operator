/* **********************************************************
 * Copyright 2018 VMware, Inc.  All rights reserved. -- VMware Confidential
 * **********************************************************/

// This file was automatically generated by lister-gen

package internalversion

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	vmoperator "vmware.com/kubevsphere/pkg/apis/vmoperator"
)

// VirtualMachineLister helps list VirtualMachines.
type VirtualMachineLister interface {
	// List lists all VirtualMachines in the indexer.
	List(selector labels.Selector) (ret []*vmoperator.VirtualMachine, err error)
	// VirtualMachines returns an object that can list and get VirtualMachines.
	VirtualMachines(namespace string) VirtualMachineNamespaceLister
	VirtualMachineListerExpansion
}

// virtualMachineLister implements the VirtualMachineLister interface.
type virtualMachineLister struct {
	indexer cache.Indexer
}

// NewVirtualMachineLister returns a new VirtualMachineLister.
func NewVirtualMachineLister(indexer cache.Indexer) VirtualMachineLister {
	return &virtualMachineLister{indexer: indexer}
}

// List lists all VirtualMachines in the indexer.
func (s *virtualMachineLister) List(selector labels.Selector) (ret []*vmoperator.VirtualMachine, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*vmoperator.VirtualMachine))
	})
	return ret, err
}

// VirtualMachines returns an object that can list and get VirtualMachines.
func (s *virtualMachineLister) VirtualMachines(namespace string) VirtualMachineNamespaceLister {
	return virtualMachineNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// VirtualMachineNamespaceLister helps list and get VirtualMachines.
type VirtualMachineNamespaceLister interface {
	// List lists all VirtualMachines in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*vmoperator.VirtualMachine, err error)
	// Get retrieves the VirtualMachine from the indexer for a given namespace and name.
	Get(name string) (*vmoperator.VirtualMachine, error)
	VirtualMachineNamespaceListerExpansion
}

// virtualMachineNamespaceLister implements the VirtualMachineNamespaceLister
// interface.
type virtualMachineNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all VirtualMachines in the indexer for a given namespace.
func (s virtualMachineNamespaceLister) List(selector labels.Selector) (ret []*vmoperator.VirtualMachine, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*vmoperator.VirtualMachine))
	})
	return ret, err
}

// Get retrieves the VirtualMachine from the indexer for a given namespace and name.
func (s virtualMachineNamespaceLister) Get(name string) (*vmoperator.VirtualMachine, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(vmoperator.Resource("virtualmachine"), name)
	}
	return obj.(*vmoperator.VirtualMachine), nil
}
